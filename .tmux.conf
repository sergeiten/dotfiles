set -sg escape-time 0
set -g default-terminal "screen-256color"
set-option -ga terminal-overrides ",xterm-256color:Tc"
set -ga terminal-overrides ",xterm-256color:Tc"

set -g pane-border-style 'bg=black,fg=#ffffff'
set -g pane-active-border-style 'bg=black,fg=#ffffff'
set -g status-style 'bg=#ffffff,fg=#ffffff'
set-window-option -g window-status-current-bg '#1E272C'
set-window-option -g window-status-current-fg cyan
set -wg mode-style 'bg=cyan,fg=black'
set -g message-style 'bg=black,fg=cyan'
set -g clock-mode-colour cyan

set -g mouse on

# Configure your default shell, Zsh in my case.
set -g default-shell $SHELL

# Retach userspaces
#set -g default-command "reattach-to-user-namespace -l /bin/zsh"

# Override the default command to use `reattach-to-user-namespace` for everything.
set -g default-command "reattach-to-user-namespace -l ${SHELL}"

# Remap prefix to ctrl-a (or caps-a for my mac)
#set -g prefix C-a

# Use vim keybindings in copy mode
# set-option -g status-keys vi
# setw -g mode-keys vi
# set-window-option -g mode-keys vi

# bind-key -T copy-mode-vi 'v' send -X begin-selection
# bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Vim style navigation in copy mode
setw -g mode-keys vi
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy" \; display-message "highlighted selection copied to system clipboard"


# reload config file 
bind r source-file ~/.tmux.conf; display "Reloaded"


# More intuitive split-window mappings
bind "'" split-window -h
bind - split-window -v

# Don't prompt to kill panes/windows.
bind-key x kill-pane
bind-key & kill-window

# Start windows and panes at 1, not 0
set -g base-index 1
setw -g pane-base-index 1

# Rename your terminals
# set -g set-titles on
# set -g set-titles-string '#(whoami)::#(curl ipecho.net/plain;echo)'

# Center the window list
set -g status-justify centre

# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# reize panes
bind -r M-h resize-pane -L 10
bind -r M-j resize-pane -D 10
bind -r M-k resize-pane -U 10
bind -r M-l resize-pane -R 10


source ~/.tmux/theme.sh
